#+TITLE: Job Hunt Simulator

A very simple job hunt simulator to pair with a talk I'm giving on the same subject.

* Brainstorming
We're going to break down the job hunt into multiple steps and preform a very basic monte carlo simulation to demonstrate the relative value of where to invest your time at improving.

I'm going to start by breaking things down into phases and thinking of the probabilities as independent of each other. This begs the question of why do a simulation at all versus just multiplying through the probabilities? I am thinking of the following
- I want to give people an instinct for how the various values affect things. I want it to be interactive and it should feel "real". Reporting the exact same value each time wouldn't do this.
- I want to be able to think about variances and potentially even non-normal distribution types as well
- I'm only starting with independent distributions. I could imagine introducing dependent variables, I just am not yet.

** Stages

- Each company might take X amount of periods to move you onto the next stage. Poisson

*** Applying
- How many jobs a period are you applying to? Poisson distribution
- How likely are you to take a period off? Binomial

*** Selection
- Likelihood this position is not real, has been paused, or no one is monitoring it? Normal
- How many applicants per period will a given job recieve? Poisson distribution
- The resume is a better fit for the role than X% other resumes? Normal
- Amount per period that will be passed through to next stage

*** Screening
- Likelihood to pass the screening step? binomial
- Likelihood the position disappears (position filled, frozen, re-org, ball dropped, etc), binomial

*** Interview 1
- Likelihood to pass the interviewing step? Normal
- Likelihood the position disappears (position filled, frozen, re-org, ball dropped, etc)

*** Interview 2
- Likelihood to pass the interviewing step? Normal
- Likelihood the position disappears (position filled, frozen, re-org, ball dropped, etc)

*** Interview 3
- Likelihood to pass the interviewing step? Normal
- Likelihood the position disappears (position filled, frozen, re-org, ball dropped, etc)

*** Offer
- Likelihood of being selected versus others? binomial
- Likelihood the position disappears (position filled, frozen, re-org, ball dropped, etc)
- Likelihood of taking an offer? binomial

*** AI
#+begin_ai
[SYS]: You are an expert in statistics, data science, and programming. Give answers in code when appropriate. Prefer functional programming techniques and generator functions. Assume we are going to be running all code in a web browser with javascript. Feel free to use libraries off of npm.
[ME]: Someone is telling me that they will apply to X jobs a week on average. I assume X is the lambda parameter in a poisson distribution. How can I create a sampling or 10 weeks and how many jobs they applied to in each week?

To create a sampling of the number of jobs someone applies to in 10 weeks, you can use the Poisson distribution. Here's a possible approach using JavaScript and the `random` library from npm:

```javascript
const random = require('random');

function* generateJobApplications(lambda, numWeeks) {
  for (let i = 0; i < numWeeks; i++) {
    yield random.poisson(lambda);
  }
}

const lambda = 5; // Average number of job applications per week
const numWeeks = 10; // Number of weeks to sample

const jobApplications = [...generateJobApplications(lambda, numWeeks)];

console.log(jobApplications);
```

In the code above, the `generateJobApplications` generator function generates a random number of job applications using the Poisson distribution for each week. The lambda parameter represents the average number of job applications per week. The generator produces one value for each week specified by `numWeeks`. 

The `[...generator]` syntax is used to convert the generator output into an array, which can be stored in the `jobApplications` variable. Finally, the `console.log(jobApplications)` line prints the sampled number of job applications for each week.

[ME]: 
#+end_ai

#+begin_ai
#+end_ai
